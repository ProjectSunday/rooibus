'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Option = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _uuid = require('uuid');

var _uuid2 = _interopRequireDefault(_uuid);

var _FormElement = require('./FormElement');

var _FormElement2 = _interopRequireDefault(_FormElement);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Select = function (_Component) {
  (0, _inherits3.default)(Select, _Component);

  function Select() {
    (0, _classCallCheck3.default)(this, Select);

    var _this = (0, _possibleConstructorReturn3.default)(this, (Select.__proto__ || (0, _getPrototypeOf2.default)(Select)).call(this));

    _this.state = { id: 'form-element-' + (0, _uuid2.default)() };
    return _this;
  }

  (0, _createClass3.default)(Select, [{
    key: 'onChange',
    value: function onChange(e) {
      var value = e.target.value;
      if (this.props.onChange) {
        this.props.onChange(e, value);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var id = this.props.id || this.state.id;
      var _props = this.props,
          label = _props.label,
          required = _props.required,
          error = _props.error,
          totalCols = _props.totalCols,
          cols = _props.cols,
          props = (0, _objectWithoutProperties3.default)(_props, ['label', 'required', 'error', 'totalCols', 'cols']);

      if (label || required || error || totalCols || cols) {
        var formElemProps = { id: id, label: label, required: required, error: error, totalCols: totalCols, cols: cols };
        return _react2.default.createElement(
          _FormElement2.default,
          formElemProps,
          _react2.default.createElement(Select, (0, _extends3.default)({}, props, { id: id }))
        );
      }
      var className = props.className,
          children = props.children,
          pprops = (0, _objectWithoutProperties3.default)(props, ['className', 'children']);

      delete pprops.onChange;
      var selectClassNames = (0, _classnames2.default)(className, 'slds-select');
      return _react2.default.createElement(
        'select',
        (0, _extends3.default)({
          id: id,
          className: selectClassNames,
          onChange: this.onChange.bind(this)
        }, pprops),
        children
      );
    }
  }]);
  return Select;
}(_react.Component);

exports.default = Select;


Select.propTypes = {
  id: _react.PropTypes.string,
  className: _react.PropTypes.string,
  label: _react.PropTypes.string,
  required: _react.PropTypes.bool,
  totalCols: _react.PropTypes.number,
  cols: _react.PropTypes.number,
  error: _FormElement2.default.propTypes.error,
  onChange: _react.PropTypes.func
};

Select.isFormElement = true;

var Option = exports.Option = function Option(props) {
  return _react2.default.createElement('option', props);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zY3JpcHRzL1NlbGVjdC5qcyJdLCJuYW1lcyI6WyJTZWxlY3QiLCJzdGF0ZSIsImlkIiwiZSIsInZhbHVlIiwidGFyZ2V0IiwicHJvcHMiLCJvbkNoYW5nZSIsImxhYmVsIiwicmVxdWlyZWQiLCJlcnJvciIsInRvdGFsQ29scyIsImNvbHMiLCJmb3JtRWxlbVByb3BzIiwiY2xhc3NOYW1lIiwiY2hpbGRyZW4iLCJwcHJvcHMiLCJzZWxlY3RDbGFzc05hbWVzIiwiYmluZCIsInByb3BUeXBlcyIsInN0cmluZyIsImJvb2wiLCJudW1iZXIiLCJmdW5jIiwiaXNGb3JtRWxlbWVudCIsIk9wdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7O0lBR3FCQSxNOzs7QUFDbkIsb0JBQWM7QUFBQTs7QUFBQTs7QUFFWixVQUFLQyxLQUFMLEdBQWEsRUFBRUMsc0JBQW9CLHFCQUF0QixFQUFiO0FBRlk7QUFHYjs7Ozs2QkFFUUMsQyxFQUFHO0FBQ1YsVUFBTUMsUUFBUUQsRUFBRUUsTUFBRixDQUFTRCxLQUF2QjtBQUNBLFVBQUksS0FBS0UsS0FBTCxDQUFXQyxRQUFmLEVBQXlCO0FBQ3ZCLGFBQUtELEtBQUwsQ0FBV0MsUUFBWCxDQUFvQkosQ0FBcEIsRUFBdUJDLEtBQXZCO0FBQ0Q7QUFDRjs7OzZCQUVRO0FBQ1AsVUFBTUYsS0FBSyxLQUFLSSxLQUFMLENBQVdKLEVBQVgsSUFBaUIsS0FBS0QsS0FBTCxDQUFXQyxFQUF2QztBQURPLG1CQUV1RCxLQUFLSSxLQUY1RDtBQUFBLFVBRUNFLEtBRkQsVUFFQ0EsS0FGRDtBQUFBLFVBRVFDLFFBRlIsVUFFUUEsUUFGUjtBQUFBLFVBRWtCQyxLQUZsQixVQUVrQkEsS0FGbEI7QUFBQSxVQUV5QkMsU0FGekIsVUFFeUJBLFNBRnpCO0FBQUEsVUFFb0NDLElBRnBDLFVBRW9DQSxJQUZwQztBQUFBLFVBRTZDTixLQUY3Qzs7QUFHUCxVQUFJRSxTQUFTQyxRQUFULElBQXFCQyxLQUFyQixJQUE4QkMsU0FBOUIsSUFBMkNDLElBQS9DLEVBQXFEO0FBQ25ELFlBQU1DLGdCQUFnQixFQUFFWCxNQUFGLEVBQU1NLFlBQU4sRUFBYUMsa0JBQWIsRUFBdUJDLFlBQXZCLEVBQThCQyxvQkFBOUIsRUFBeUNDLFVBQXpDLEVBQXRCO0FBQ0EsZUFDRTtBQUFBO0FBQWtCQyx1QkFBbEI7QUFDRSx3Q0FBQyxNQUFELDZCQUFrQlAsS0FBbEIsSUFBeUJKLE1BQXpCO0FBREYsU0FERjtBQUtEO0FBVk0sVUFXQ1ksU0FYRCxHQVdvQ1IsS0FYcEMsQ0FXQ1EsU0FYRDtBQUFBLFVBV1lDLFFBWFosR0FXb0NULEtBWHBDLENBV1lTLFFBWFo7QUFBQSxVQVd5QkMsTUFYekIsMENBV29DVixLQVhwQzs7QUFZUCxhQUFPVSxPQUFPVCxRQUFkO0FBQ0EsVUFBTVUsbUJBQW1CLDBCQUFXSCxTQUFYLEVBQXNCLGFBQXRCLENBQXpCO0FBQ0EsYUFDRTtBQUFBO0FBQUE7QUFDRSxjQUFLWixFQURQO0FBRUUscUJBQVllLGdCQUZkO0FBR0Usb0JBQVcsS0FBS1YsUUFBTCxDQUFjVyxJQUFkLENBQW1CLElBQW5CO0FBSGIsV0FJT0YsTUFKUDtBQU1JRDtBQU5KLE9BREY7QUFVRDs7Ozs7a0JBckNrQmYsTTs7O0FBeUNyQkEsT0FBT21CLFNBQVAsR0FBbUI7QUFDakJqQixNQUFJLGlCQUFVa0IsTUFERztBQUVqQk4sYUFBVyxpQkFBVU0sTUFGSjtBQUdqQlosU0FBTyxpQkFBVVksTUFIQTtBQUlqQlgsWUFBVSxpQkFBVVksSUFKSDtBQUtqQlYsYUFBVyxpQkFBVVcsTUFMSjtBQU1qQlYsUUFBTSxpQkFBVVUsTUFOQztBQU9qQlosU0FBTyxzQkFBWVMsU0FBWixDQUFzQlQsS0FQWjtBQVFqQkgsWUFBVSxpQkFBVWdCO0FBUkgsQ0FBbkI7O0FBV0F2QixPQUFPd0IsYUFBUCxHQUF1QixJQUF2Qjs7QUFFTyxJQUFNQywwQkFBUyxTQUFUQSxNQUFTO0FBQUEsU0FDcEIsd0NBQWFuQixLQUFiLENBRG9CO0FBQUEsQ0FBZiIsImZpbGUiOiJTZWxlY3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgUHJvcFR5cGVzLCBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY2xhc3NuYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCB1dWlkIGZyb20gJ3V1aWQnO1xuaW1wb3J0IEZvcm1FbGVtZW50IGZyb20gJy4vRm9ybUVsZW1lbnQnO1xuXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlbGVjdCBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5zdGF0ZSA9IHsgaWQ6IGBmb3JtLWVsZW1lbnQtJHt1dWlkKCl9YCB9O1xuICB9XG5cbiAgb25DaGFuZ2UoZSkge1xuICAgIGNvbnN0IHZhbHVlID0gZS50YXJnZXQudmFsdWU7XG4gICAgaWYgKHRoaXMucHJvcHMub25DaGFuZ2UpIHtcbiAgICAgIHRoaXMucHJvcHMub25DaGFuZ2UoZSwgdmFsdWUpO1xuICAgIH1cbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCBpZCA9IHRoaXMucHJvcHMuaWQgfHwgdGhpcy5zdGF0ZS5pZDtcbiAgICBjb25zdCB7IGxhYmVsLCByZXF1aXJlZCwgZXJyb3IsIHRvdGFsQ29scywgY29scywgLi4ucHJvcHMgfSA9IHRoaXMucHJvcHM7XG4gICAgaWYgKGxhYmVsIHx8IHJlcXVpcmVkIHx8IGVycm9yIHx8IHRvdGFsQ29scyB8fCBjb2xzKSB7XG4gICAgICBjb25zdCBmb3JtRWxlbVByb3BzID0geyBpZCwgbGFiZWwsIHJlcXVpcmVkLCBlcnJvciwgdG90YWxDb2xzLCBjb2xzIH07XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8Rm9ybUVsZW1lbnQgeyAuLi5mb3JtRWxlbVByb3BzIH0+XG4gICAgICAgICAgPFNlbGVjdCB7IC4uLnsgLi4ucHJvcHMsIGlkIH0gfSAvPlxuICAgICAgICA8L0Zvcm1FbGVtZW50PlxuICAgICAgKTtcbiAgICB9XG4gICAgY29uc3QgeyBjbGFzc05hbWUsIGNoaWxkcmVuLCAuLi5wcHJvcHMgfSA9IHByb3BzO1xuICAgIGRlbGV0ZSBwcHJvcHMub25DaGFuZ2U7XG4gICAgY29uc3Qgc2VsZWN0Q2xhc3NOYW1lcyA9IGNsYXNzbmFtZXMoY2xhc3NOYW1lLCAnc2xkcy1zZWxlY3QnKTtcbiAgICByZXR1cm4gKFxuICAgICAgPHNlbGVjdFxuICAgICAgICBpZD17IGlkIH1cbiAgICAgICAgY2xhc3NOYW1lPXsgc2VsZWN0Q2xhc3NOYW1lcyB9XG4gICAgICAgIG9uQ2hhbmdlPXsgdGhpcy5vbkNoYW5nZS5iaW5kKHRoaXMpIH1cbiAgICAgICAgeyAuLi5wcHJvcHMgfVxuICAgICAgPlxuICAgICAgICB7IGNoaWxkcmVuIH1cbiAgICAgIDwvc2VsZWN0PlxuICAgICk7XG4gIH1cblxufVxuXG5TZWxlY3QucHJvcFR5cGVzID0ge1xuICBpZDogUHJvcFR5cGVzLnN0cmluZyxcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBsYWJlbDogUHJvcFR5cGVzLnN0cmluZyxcbiAgcmVxdWlyZWQ6IFByb3BUeXBlcy5ib29sLFxuICB0b3RhbENvbHM6IFByb3BUeXBlcy5udW1iZXIsXG4gIGNvbHM6IFByb3BUeXBlcy5udW1iZXIsXG4gIGVycm9yOiBGb3JtRWxlbWVudC5wcm9wVHlwZXMuZXJyb3IsXG4gIG9uQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYyxcbn07XG5cblNlbGVjdC5pc0Zvcm1FbGVtZW50ID0gdHJ1ZTtcblxuZXhwb3J0IGNvbnN0IE9wdGlvbiA9IHByb3BzID0+IChcbiAgPG9wdGlvbiB7IC4uLnByb3BzIH0gLz5cbik7XG4iXX0=